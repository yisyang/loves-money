// Generated by CoffeeScript 1.8.0
(function() {
  var DynamicViewsHandler, allowDomain, app, bodyParser, browserify, config, cookieParser, eh, express, favicon, logger, lovesMoneyRedirector, modelsLoader, multiViews, path, routesLoader, views, _;

  browserify = require('browserify-middleware');

  express = require('express');

  path = require('path');

  favicon = require('serve-favicon');

  multiViews = require('multi-views');

  _ = require('lodash');

  logger = require('morgan');

  cookieParser = require('cookie-parser');

  bodyParser = require('body-parser');

  config = require('./config/config.js');

  eh = require('./core/handlers/error-handler.js');

  DynamicViewsHandler = require('./core/handlers/dynamic-views-handler.js');

  app = express();

  app.set('config', config);

  app.disable('x-powered-by');

  app.use(function(req, res, next) {
    res.setHeader('X-Powered-By', 'Endless river of sweat and tears');
    next();
  });

  app.use('*.coffee', function(req, res, next) {
    var err;
    console.log("[Blocked] Access to coffeescript %s %s", req.method, req.url);
    err = eh.createError('Not Found', {
      status: 404
    });
    return next(err);
  });

  app.use("/public", express["static"](path.join(__dirname, 'public')));

  app.use("/core", express["static"](path.join(__dirname, 'public', 'core')));

  app.use("/vendor", express["static"](path.join(__dirname, 'public', 'vendor')));

  app.use("/js", express["static"](path.join(__dirname, 'public', config.appDir, 'js')));

  app.use("/css", express["static"](path.join(__dirname, 'public', config.appDir, 'css')));

  app.use("/img", express["static"](path.join(__dirname, 'public', config.appDir, 'img')));

  app.use("/partials", express["static"](path.join(__dirname, 'public', config.appDir, 'partials')));

  app.use("/templates", express["static"](path.join(__dirname, 'public', config.appDir, 'templates')));

  lovesMoneyRedirector = require('./app/middlewares/redirector.js');

  app.use(lovesMoneyRedirector);

  app.use(favicon(path.join(__dirname, 'public', config.appDir, 'img', 'favicon.ico')));

  app.use(cookieParser());

  app.use(bodyParser.json({
    extended: false
  }));

  app.use(bodyParser.urlencoded({
    extended: false
  }));

  allowDomain = require('./core/handlers/cors-handler.js');

  app.use(allowDomain('*'));

  app.use(eh.resRenderer);

  modelsLoader = require('./core/loaders/waterline-loader.js');

  if (typeof modelsLoader.updateAdapters === 'function') {
    config.db = modelsLoader.updateAdapters(config.db);
  }

  modelsLoader.loadModels(path.join(__dirname, config.appDir, 'schema', 'waterline'));

  modelsLoader.orm.initialize(config.db, function(err, models) {
    if (err) {
      throw err;
    }
    app.models = models.collections;
    return app.connections = models.connections;
  });

  multiViews.setupMultiViews(app);

  DynamicViewsHandler.setupViews(app, [path.join(__dirname, config.appDir, 'views', 'default'), path.join(__dirname, 'core', 'views', 'default')]);

  app.use("/public", eh.displayAppError(eh.createError('Not Found', {
    status: 404
  })));

  app.use("/core", eh.displayAppError(eh.createError('Not Found', {
    status: 404
  })));

  app.use("/vendor", eh.displayAppError(eh.createError('Not Found', {
    status: 404
  })));

  app.use("/js", eh.displayAppError(eh.createError('Not Found', {
    status: 404
  })));

  app.use("/css", eh.displayAppError(eh.createError('Not Found', {
    status: 404
  })));

  app.use("/img", eh.displayAppError(eh.createError('Not Found', {
    status: 404
  })));

  app.use("/partials", eh.displayAppError(eh.createError('Not Found', {
    status: 404
  })));

  app.use("/templates", eh.displayAppError(eh.createError('Not Found', {
    status: 404
  })));

  app.use(logger(config.env === 'development' ? 'dev' : 'tiny'));

  routesLoader = require('./core/loaders/routes-loader.js');

  routesLoader.loadRoutes(path.join(__dirname, config.appDir, 'routes'));

  routesLoader.registerRoutes(app);

  views = app.get('views');

  app.use(eh.createAppError('Not Found', {
    status: 404
  }));

  app.use(eh.displayAppError());

  module.exports = app;

}).call(this);

//# sourceMappingURL=server.js.map
