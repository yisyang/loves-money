// Generated by CoffeeScript 1.8.0
(function() {
  $(document).ready(function() {

    /* Button events */
    var DemoPage;
    $('.demo-menu').on('click', '.item', function() {
      var newRequestType;
      newRequestType = $(this).attr('data-value');
      $('.demo-menu').children('.item').removeClass('active');
      $(this).addClass('active');
      $('.demo-submit-button').text($(this).text());
      if (newRequestType === 'add') {
        return $('input[name="alias-type"]').trigger('change');
      } else {
        $('input[name="domain"]').closest('.field').not('.hidden').transition('slide down');
        return $('input[name="email"]').closest('.field').not('.hidden').transition('slide down');
      }
    });
    $('input[name="alias-type"]').on('change', function() {
      var aliasType, requestType;
      requestType = DemoPage.getFormRequestType();
      if (requestType !== 'add') {
        return;
      }
      aliasType = DemoPage.getFormAliasType();
      if (aliasType === 'domain') {
        if ($('input[name="email"]').closest('.field').not('.hidden').length) {
          return $('input[name="email"]').closest('.field').not('.hidden').transition('slide down', function() {
            return $('input[name="domain"]').closest('.field.hidden').transition('slide down');
          });
        } else {
          return $('input[name="domain"]').closest('.field.hidden').transition('slide down');
        }
      } else if (aliasType === 'email') {
        if ($('input[name="domain"]').closest('.field').not('.hidden').length) {
          return $('input[name="domain"]').closest('.field').not('.hidden').transition('slide down', function() {
            return $('input[name="email"]').closest('.field.hidden').transition('stop all').transition('slide down');
          });
        } else {
          return $('input[name="email"]').closest('.field.hidden').transition('stop all').transition('slide down');
        }
      }
    });
    $('.demo-submit-button').click(function() {
      var aliasType, requestType;
      requestType = DemoPage.getFormRequestType();
      aliasType = DemoPage.getFormAliasType();
      if (requestType === 'lookup') {
        if (aliasType === 'domain') {
          DemoPage.getDomainAlias();
        } else if (aliasType === 'email') {
          DemoPage.getEmailAlias();
        }
      } else if (requestType === 'add') {
        if (aliasType === 'domain') {
          DemoPage.postDomainAlias();
        } else if (aliasType === 'email') {
          DemoPage.postEmailAlias();
        }
      } else if (requestType === 'remove') {
        if (aliasType === 'domain') {
          DemoPage.deleteDomainAlias();
        } else if (aliasType === 'email') {
          DemoPage.deleteEmailAlias();
        }
      }
    });

    /* Demo page functions */
    DemoPage = (function() {
      function DemoPage() {}

      DemoPage.jwt;

      DemoPage.apiDomain = (window.location.protocol || document.location.protocol) + '//api.loves.money/';

      DemoPage.getFormRequestType = function() {
        return $('.demo-menu .item.active').attr('data-value');
      };

      DemoPage.getFormAliasType = function() {
        return $('input[name="alias-type"]').val();
      };

      DemoPage.getFormAlias = function() {
        return $('input[name="alias"]').val();
      };

      DemoPage.getFormDomain = function() {
        return $('input[name="domain"]').val();
      };

      DemoPage.getFormEmail = function() {
        return $('input[name="email"]').val();
      };

      DemoPage.getDomainAlias = function() {
        var alias;
        alias = DemoPage.getFormAlias();
        DemoPage.rest('GET', DemoPage.apiDomain + 'domain-aliases/' + alias).then(function(resp) {
          DemoPage.logResponse(resp);
        })["catch"](function(err) {
          DemoPage.logResponse(err.responseJSON);
          DemoPage.reportError(err);
        });
      };

      DemoPage.postDomainAlias = function() {
        var postData;
        postData = {
          alias: DemoPage.getFormAlias(),
          domain: DemoPage.getFormDomain()
        };
        DemoPage.login().then(function() {
          return DemoPage.rest('POST', DemoPage.apiDomain + 'domain-aliases/', postData);
        }).then(function(resp) {
          DemoPage.logResponse(resp);
        })["catch"](function(err) {
          DemoPage.logResponse(err.responseJSON);
          DemoPage.reportError(err);
        });
      };

      DemoPage.deleteDomainAlias = function() {
        var alias;
        alias = DemoPage.getFormAlias();
        DemoPage.login().then(function() {
          return DemoPage.rest('DELETE', DemoPage.apiDomain + 'domain-aliases/' + alias);
        }).then(function(resp) {
          DemoPage.logResponse(resp);
        })["catch"](function(err) {
          DemoPage.logResponse(err.responseJSON);
          DemoPage.reportError(err);
        });
      };

      DemoPage.getEmailAlias = function() {
        var alias;
        alias = DemoPage.getFormAlias();
        DemoPage.rest('GET', DemoPage.apiDomain + 'email-aliases/' + alias).then(function(resp) {
          DemoPage.logResponse(resp);
        })["catch"](function(err) {
          DemoPage.logResponse(err.responseJSON);
          DemoPage.reportError(err);
        });
      };

      DemoPage.postEmailAlias = function() {
        var postData;
        postData = {
          alias: DemoPage.getFormAlias(),
          email: DemoPage.getFormEmail()
        };
        DemoPage.login().then(function() {
          return DemoPage.rest('POST', DemoPage.apiDomain + 'email-aliases/', postData);
        }).then(function(resp) {
          DemoPage.logResponse(resp);
        })["catch"](function(err) {
          DemoPage.logResponse(err.responseJSON);
          DemoPage.reportError(err);
        });
      };

      DemoPage.deleteEmailAlias = function() {
        var alias;
        alias = DemoPage.getFormAlias();
        DemoPage.login().then(function() {
          return DemoPage.rest('DELETE', DemoPage.apiDomain + 'email-aliases/' + alias);
        }).then(function(resp) {
          DemoPage.logResponse(resp);
        })["catch"](function(err) {
          DemoPage.logResponse(err.responseJSON);
          DemoPage.reportError(err);
        });
      };

      DemoPage.login = function() {
        var postData;
        if (DemoPage.jwt) {
          return Promise.resolve();
        }
        postData = {
          email: 'demo' + '@loves.money',
          pwHash: LM.sha1('demo123')
        };
        return DemoPage.rest('POST', DemoPage.apiDomain + 'auth/login', postData).then(function(resp) {
          DemoPage.jwt = resp.data;
        })["catch"](function(err) {
          DemoPage.reportError(err);
        });
      };

      DemoPage.getAuthHeaders = function() {
        if (DemoPage.jwt) {
          return {
            Authorization: 'Bearer ' + DemoPage.jwt
          };
        } else {
          return {};
        }
      };

      DemoPage.rest = function(method, url, body) {
        var params;
        if (body == null) {
          body = {};
        }
        params = {
          method: method,
          url: url,
          data: body,
          dataType: 'json',
          headers: DemoPage.getAuthHeaders()
        };
        return Promise.resolve($.ajax(params)).then(function(resp) {
          return resp;
        })["catch"](function(err) {
          var _ref;
          if (err.status === 401 && ((_ref = err.responseJSON.message) === "Invalid credentials" || _ref === "Token expired") && !body.noMoreRetries) {
            body.noMoreRetries = true;
            DemoPage.jwt = null;
            return DemoPage.login().then(function() {
              return DemoPage.rest(method, url, body);
            });
          } else {
            throw err;
          }
        });
      };

      DemoPage.logResponse = function(resp) {
        var prettyJson;
        prettyJson = JSON.stringify(resp, null, '\t');
        return $('.demo-response-holder').text(prettyJson);
      };

      DemoPage.reportError = (typeof console !== "undefined" && console !== null ? console.log : void 0) && Function.prototype.bind ? Function.prototype.bind.call(console.log, console) : function() {};

      return DemoPage;

    })();
  });

}).call(this);

//# sourceMappingURL=demo.js.map
