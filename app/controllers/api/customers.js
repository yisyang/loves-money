// Generated by CoffeeScript 1.8.0
(function() {
  var controller, formatCustomer, hmacSha1, sha1;

  hmacSha1 = require('crypto-js/hmac-sha1');

  sha1 = require('crypto-js/sha1');

  controller = {};

  controller.index = function(req, res) {
    res._cc.fail('Invalid route, please use the UI at loves.money or view github source for valid requests.');
  };

  controller.getCustomer = function(req, res) {
    var customers;
    customers = req.app.models.customer;
    customers.findOne({
      id: req.params.customer
    }, function(err, customer) {
      if (err) {
        res._cc.fail('Unable to get customer', {}, err);
      }
      if (customer) {
        res._cc.success(formatCustomer(req, customer));
      } else {
        res._cc.fail('Customer not found');
      }
    });
  };

  controller.postCustomer = function(req, res) {
    var customers, new_customer;
    customers = req.app.models.customer;
    new_customer = {
      name: req.body.name,
      uuid: req.body.uuid,
      pwHash: hmacSha1(req.body.pw_transformed, req.app.get('config').secret_keys.db_hash).toString(),
      email: req.body.email
    };
    customers.create(new_customer).then(function(customer) {
      res._cc.success(formatCustomer(req, customer));
    })["catch"](function(err) {
      res._cc.fail('Error creating customer', {}, err);
    });
  };

  controller.deleteCustomer = function(req, res) {
    var customers;
    customers = req.app.models.customer;
    customers.destroy({
      id: req.params.id
    }).then(function(customer) {
      res._cc.success(formatCustomer(req, customer));
    })["catch"](function(err) {
      res._cc.fail('Unable to delete customer', {}, err);
    });
  };

  formatCustomer = function(req, customer) {
    var result;
    result = {
      name: customer.name,
      uuid: customer.uuid,
      email: customer.email
    };
    if (req.headers['api-secret'] === req.app.get('config').secret_keys.api_secret) {
      result.customer_secret = customer.customer_secret;
    }
    return result;
  };

  module.exports = controller;

}).call(this);

//# sourceMappingURL=customers.js.map
