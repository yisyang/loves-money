// Generated by CoffeeScript 1.8.0
(function() {
  module.exports = function(subdomain, routerFn) {
    if (typeof subdomain === "undefined") {
      subdomain = '';
    } else if (typeof subdomain !== "string") {
      throw new Error("The first parameter must be a string representing the subdomain");
    }
    if (!routerFn || typeof routerFn !== "function" || routerFn.length < 3) {
      throw new Error("The second parameter must be a function that handles fn(req, res, next) params.");
    }
    return function(req, res, next) {
      var actual, evaluated, expected, i, len, pass, subdomainSplit;
      if (typeof req.__subdomainEvaluationResults === "undefined") {
        req.__subdomainEvaluationResults = {};
      }
      if (typeof req.__subdomainEvaluationResults[subdomain] !== "undefined") {
        pass = req.__subdomainEvaluationResults[subdomain];
        evaluated = true;
      } else {
        pass = false;
        evaluated = false;
      }
      if (!evaluated) {
        if (!subdomain.length && (!req.subdomains.length || (req.subdomains.length === 1 && req.subdomains[0] === 'www'))) {
          pass = true;
          evaluated = true;
        }
      }
      if (!evaluated) {
        subdomainSplit = subdomain.split(".");
        len = subdomainSplit.length;
        i = 0;
        pass = true;
        evaluated = true;
        while (i < len) {
          expected = subdomainSplit[len - (i + 1)];
          actual = req.subdomains[i];
          if (expected === "*") {
            continue;
          }
          if (actual !== expected) {
            pass = false;
            break;
          }
          i++;
        }
      }
      req.__subdomainEvaluationResults[subdomain] = pass;
      if (pass) {
        return routerFn(req, res, next);
      } else {
        next();
      }
    };
  };

}).call(this);

//# sourceMappingURL=subdomain-handler.js.map
